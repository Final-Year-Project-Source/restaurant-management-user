{
  "version": 3,
  "pages404": true,
  "caseSensitive": false,
  "basePath": "",
  "redirects": [
    {
      "source": "/:path+/",
      "destination": "/:path+",
      "internal": true,
      "statusCode": 308,
      "regex": "^(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))/$"
    }
  ],
  "headers": [
    {
      "source": "/api/:path*",
      "headers": [
        { "key": "Access-Control-Allow-Credentials", "value": "true" },
        { "key": "Access-Control-Allow-Origin", "value": "*" },
        { "key": "Access-Control-Allow-Methods", "value": "GET,DELETE,PATCH,POST,PUT,OPTIONS" },
        {
          "key": "Access-Control-Allow-Headers",
          "value": "X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version"
        }
      ],
      "regex": "^/api(?:/((?:[^/]+?)(?:/(?:[^/]+?))*))?(?:/)?$"
    }
  ],
  "dynamicRoutes": [],
  "staticRoutes": [
    { "page": "/", "regex": "^/(?:/)?$", "routeKeys": {}, "namedRegex": "^/(?:/)?$" },
    { "page": "/_not-found", "regex": "^/_not\\-found(?:/)?$", "routeKeys": {}, "namedRegex": "^/_not\\-found(?:/)?$" },
    { "page": "/basket", "regex": "^/basket(?:/)?$", "routeKeys": {}, "namedRegex": "^/basket(?:/)?$" },
    {
      "page": "/confirmation",
      "regex": "^/confirmation(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/confirmation(?:/)?$"
    },
    {
      "page": "/favicon.ico",
      "regex": "^/favicon\\.ico(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/favicon\\.ico(?:/)?$"
    },
    { "page": "/feedback", "regex": "^/feedback(?:/)?$", "routeKeys": {}, "namedRegex": "^/feedback(?:/)?$" },
    {
      "page": "/feedback/rating",
      "regex": "^/feedback/rating(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/feedback/rating(?:/)?$"
    },
    {
      "page": "/feedback/rating/thank-you",
      "regex": "^/feedback/rating/thank\\-you(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/feedback/rating/thank\\-you(?:/)?$"
    },
    {
      "page": "/forgot-password",
      "regex": "^/forgot\\-password(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/forgot\\-password(?:/)?$"
    },
    { "page": "/login", "regex": "^/login(?:/)?$", "routeKeys": {}, "namedRegex": "^/login(?:/)?$" },
    { "page": "/menu", "regex": "^/menu(?:/)?$", "routeKeys": {}, "namedRegex": "^/menu(?:/)?$" },
    { "page": "/product", "regex": "^/product(?:/)?$", "routeKeys": {}, "namedRegex": "^/product(?:/)?$" },
    { "page": "/receipt", "regex": "^/receipt(?:/)?$", "routeKeys": {}, "namedRegex": "^/receipt(?:/)?$" },
    {
      "page": "/receipt/receipt-download",
      "regex": "^/receipt/receipt\\-download(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/receipt/receipt\\-download(?:/)?$"
    },
    { "page": "/register", "regex": "^/register(?:/)?$", "routeKeys": {}, "namedRegex": "^/register(?:/)?$" },
    {
      "page": "/request-tax-invoice",
      "regex": "^/request\\-tax\\-invoice(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/request\\-tax\\-invoice(?:/)?$"
    },
    { "page": "/setting", "regex": "^/setting(?:/)?$", "routeKeys": {}, "namedRegex": "^/setting(?:/)?$" },
    {
      "page": "/ui-components",
      "regex": "^/ui\\-components(?:/)?$",
      "routeKeys": {},
      "namedRegex": "^/ui\\-components(?:/)?$"
    }
  ],
  "dataRoutes": [],
  "rsc": {
    "header": "RSC",
    "varyHeader": "RSC, Next-Router-State-Tree, Next-Router-Prefetch, Next-Url",
    "prefetchHeader": "Next-Router-Prefetch",
    "didPostponeHeader": "x-nextjs-postponed",
    "contentTypeHeader": "text/x-component",
    "suffix": ".rsc",
    "prefetchSuffix": ".prefetch.rsc"
  },
  "rewrites": []
}
